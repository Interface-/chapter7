{'TMP': 'C:\\Users\\nibir\\AppData\\Local\\Temp', 'COMPUTERNAME': 'DESKTOP-L1FOMDL', 'VS140COMNTOOLS': 'A:\\Program Files\\vs2013\\Common7\\Tools\\', 'VS110COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\', 'USERDOMAIN': 'DESKTOP-L1FOMDL', 'PSMODULEPATH': 'C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 58 Stepping 9, GenuineIntel', 'PROGRAMFILES': 'C:\\Program Files', 'PROCESSOR_REVISION': '3a09', 'SYSTEMROOT': 'C:\\Windows', 'HOME': 'C:\\Users\\nibir', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'LANG': 'zh_CN', 'TK_LIBRARY': 'A:\\Program Files\\python 2.7\\tcl\\tk8.5', 'TEMP': 'C:\\Users\\nibir\\AppData\\Local\\Temp', 'OPENCV': 'E:\\Program Files\\OPENCV\\opencv\\build', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'TIX_LIBRARY': 'A:\\Program Files\\python 2.7\\tcl\\tix8.4.3', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\nibir\\AppData\\Local', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEPATH': '\\Users\\nibir', 'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-L1FOMDL', 'VS120COMNTOOLS': 'A:\\Program Files\\vs2013\\Common7\\Tools\\', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'nibir', 'LOGONSERVER': '\\\\MicrosoftAccount', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'TCL_LIBRARY': 'A:\\Program Files\\python 2.7\\tcl\\tcl8.5', 'PATH': 'C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files (x86)\\Windows Phone TShell\\;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;A:\\Program Files\\python 2.7;A:\\Program Files\\python 2.7\\Scripts;E:\\Program Files\\OPENCV\\opencv\\build\\x86\\vc12\\bin', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'WINDIR': 'C:\\Windows', 'APPDATA': 'C:\\Users\\nibir\\AppData\\Roaming', 'HOMEDRIVE': 'C:', 'SYSTEMDRIVE': 'C:', 'NUMBER_OF_PROCESSORS': '8', 'PROCESSOR_LEVEL': '6', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\nibir'}